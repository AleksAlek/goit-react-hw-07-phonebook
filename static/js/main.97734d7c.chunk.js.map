{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/App/App.module.css","actions/contactsActions.js","components/AddContactForm/AddContactForm.jsx","actions/filterActions.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","reducers/contactsReducer.js","reducers/filterReducer.js","reducers/index.js","store.js","index.js","components/AddContactForm/AddContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","initialState","name","number","AddContactForm","contacts","useState","contact","setContact","dispatch","useDispatch","handleContactData","e","target","value","onSubmit","preventDefault","alert","newContact","id","shortid","generate","className","s","addForm","formLabel","formInput","type","pattern","title","required","onChange","formBtn","filterContacts","Filter","filter","setFilter","filterLabel","filterInput","event","ContactList","useSelector","state","filteredContacts","toLowerCase","includes","contactsList","map","contactsItem","contactsName","contactsBtn","onClick","newContactsArray","handleDelete","App","mainContainer","contactsReducer","createReducer","payload","filterReducer","rootReducer","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97734d7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3Mq17\",\"contactsItem\":\"ContactList_contactsItem__3SJYi\",\"contactsName\":\"ContactList_contactsName__E-zFv\",\"contactsBtn\":\"ContactList_contactsBtn__SionL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__3RsVI\",\"filterInput\":\"Filter_filterInput__17QiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__3pQ8u\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/addContact');\n\nexport const deleteContact = createAction('contacts/deleteContact');\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './AddContactForm.module.css';\r\nimport { addContact } from '../../actions/contactsActions';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nconst AddContactForm = ({ contacts }) => {\r\n  const [contact, setContact] = useState(initialState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleContactData = e =>\r\n    setContact({\r\n      ...contact,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    for (const { name } of contacts) {\r\n      if (name === contact.name) {\r\n        alert(`${name} is already in contacts`);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name: contact.name,\r\n      number: contact.number,\r\n    };\r\n\r\n    dispatch(addContact(newContact));\r\n    setContact({ name: '', number: '' });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.addForm}>\r\n      <label className={s.formLabel}>\r\n        Name\r\n        <input\r\n          className={s.formInput}\r\n          value={contact.name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.formLabel}>\r\n        Number\r\n        <input\r\n          className={s.formInput}\r\n          value={contact.number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleContactData}\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.formBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default AddContactForm;\r\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const filterContacts = createAction('filter/filterContacts');\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../actions/filterActions';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const [filter, setFilter] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilter = event => {\r\n    dispatch(filterContacts(event.target.value));\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={handleFilter}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../actions/contactsActions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const filteredContacts = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  const handleDelete = id => {\r\n    const newContactsArray = contacts.filter(contact => contact.id !== id);\r\n    dispatch(deleteContact(newContactsArray));\r\n  };\r\n\r\n  return (\r\n    <ul className={s.contactsList}>\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contactsItem}>\r\n          <p className={s.contactsName}>\r\n            {name}: {number}\r\n          </p>\r\n\r\n          <button\r\n            className={s.contactsBtn}\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AddContactForm from '../AddContactForm/AddContactForm';\nimport Filter from '../Filter/Filter';\nimport ContactList from '../ContactList/ContactList';\nimport s from './App.module.css';\n\nconst App = () => {\n  const contacts = useSelector(state => state.contacts);\n\n  return (\n    <div className={s.mainContainer}>\n      <h1>Phonebook</h1>\n      <AddContactForm contacts={contacts} />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList contacts={contacts} />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact } from '../actions/contactsActions';\n\nconst contactsReducer = createReducer([], {\n  [addContact.type]: (state, { payload }) => [...state, payload],\n  [deleteContact.type]: (state, { payload }) => payload,\n});\n\nexport default contactsReducer;\n","import { createReducer } from '@reduxjs/toolkit';\nimport { filterContacts } from '../actions/filterActions';\n\nconst filterReducer = createReducer('', {\n  [filterContacts.type]: (state, { payload }) => payload,\n});\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from './contactsReducer';\nimport filterReducer from './filterReducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"AddContactForm_addForm__sDRHm\",\"formLabel\":\"AddContactForm_formLabel__3Ina2\",\"formInput\":\"AddContactForm_formInput__2VVFn\",\"formBtn\":\"AddContactForm_formBtn__2C_bb\"};"],"sourceRoot":""}